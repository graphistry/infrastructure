---
- name: Tell apt to prioritize nvidia packages over all else
  copy: src=60nvidia
        dest=/etc/apt/preferences.d/60nvidia
        owner=root
        group=root
        mode=0644
  sudo: yes
  sudo_user: root

- name: "Download CUDA repo .deb package"
  get_url: "dest=/tmp/cuda-repo-ubuntu1404_7.5-18_amd64.deb url=http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.5-18_amd64.deb"
  sudo: yes

- name: Install CUDA repo .deb package
  apt: "deb=/tmp/cuda-repo-ubuntu1404_7.5-18_amd64.deb state=present"
  sudo: yes
  register: cuda_repo_installed

- name: Update APT cache
  apt: update_cache=yes
  when: cuda_repo_installed.changed
  sudo: yes

- name: Install CUDA 7.5 (includes NVIDIA drivers)
  apt: pkg=cuda-7-5
       state=present
       update_cache=yes
       cache_valid_time=600
  notify:
      - Reboot server
      - Wait for server to restart
  sudo: yes

# Force handlers to run, which will cause a reboot here if one is to be performed
- meta: flush_handlers

- name: Install CUDA/NVIDIA/Xorg support packages
  apt: pkg={{ item }} state=present
  sudo: yes
  register: cuda_installed
  with_items:
    - linux-image-extra-virtual
    - mesa-utils
    - libxrandr-dev
    - libxcursor-dev
    - libglew-dev
    - libglu1-mesa-dev
    - libfreeimage-dev
    - libxinerama-dev
    - xinput
    - libxi-dev
    - cmake
    - unzip

- name: Set X.Org conf file
  copy: src=xorg.conf
        dest=/etc/X11/xorg.conf
        force=yes
        owner=root
        group=root
        mode=0644
  sudo: yes

- name: Configure GRUB to not run a graphical shell on startup
  copy: src=grub
        dest=/etc/default/grub
        force=yes
        owner=root
        group=root
        mode=0644
  register: grub_config
  sudo: yes

- name: Update GRUB
  command: update-grub
  when: grub_config.changed
  sudo: yes

- name: Configure Bash environment to support CUDA
  copy: src=50graphistry-cuda.sh
        dest=/etc/profile.d/50graphistry-cuda.sh
        force=yes
        owner=root
        group=root
        mode=0755
  sudo: true

- name: Clone GLFW
  git: repo=https://github.com/glfw/glfw.git
       dest=/tmp/glfw
       version=master
       update=no
  register: glfw

- name: Generate GLFW makefiles
  command: chdir=/tmp/glfw cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=TRUE
  when: glfw.changed

- name: Make GLFW
  command: chdir=/tmp/glfw make
  when: glfw.changed

- name: Install GLFW
  command: chdir=/tmp/glfw make install
  sudo: yes
  when: glfw.changed
